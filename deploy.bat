@echo off
REM AI Nutritionist Assistant - Windows Deployment Script
REM Portfolio demonstration setup for Windows environments

echo ðŸ¥— AI Nutritionist Assistant - Portfolio Deployment
echo ==================================================
echo.

REM Check Python
python --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] Python is required but not installed.
    echo Please install Python 3.11+ from https://python.org
    pause
    exit /b 1
)

REM Check AWS CLI
aws --version >nul 2>&1
if errorlevel 1 (
    echo [ERROR] AWS CLI is required but not installed.
    echo Please install from: https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
    pause
    exit /b 1
)

echo [SUCCESS] Prerequisites found!

REM Setup Python environment
echo [INFO] Setting up Python virtual environment...
python -m venv .venv
call .venv\Scripts\activate.bat

echo [SUCCESS] Virtual environment activated

REM Install dependencies
echo [INFO] Installing Python dependencies...
pip install -r requirements.txt
echo [SUCCESS] Dependencies installed

REM Run tests
echo [INFO] Running validation tests...
python -m pytest tests/test_project_validation.py -v
if errorlevel 1 (
    echo [ERROR] Tests failed
    pause
    exit /b 1
)
echo [SUCCESS] All tests passed!

REM Check AWS credentials
echo [INFO] Checking AWS credentials...
aws sts get-caller-identity >nul 2>&1
if errorlevel 1 (
    echo [ERROR] AWS credentials not configured.
    echo Please run: aws configure
    pause
    exit /b 1
)

for /f "tokens=*" %%a in ('aws sts get-caller-identity --query Account --output text') do set AWS_ACCOUNT_ID=%%a
for /f "tokens=*" %%a in ('aws configure get region') do set AWS_REGION=%%a
if "%AWS_REGION%"=="" set AWS_REGION=us-east-1

echo [SUCCESS] AWS credentials configured for account: %AWS_ACCOUNT_ID% in region: %AWS_REGION%

REM Check SAM CLI
sam --version >nul 2>&1
if errorlevel 1 (
    echo [WARNING] AWS SAM CLI not found.
    echo Please install from: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html
    echo [INFO] Continuing without SAM deployment...
    goto :skip_sam
)

REM Build and deploy SAM
echo [INFO] Building SAM application...
cd infrastructure
sam build
if errorlevel 1 (
    echo [ERROR] SAM build failed
    cd ..
    pause
    exit /b 1
)

echo [INFO] Deploying SAM application...
if exist samconfig.toml (
    sam deploy
) else (
    echo [INFO] First deployment - running guided setup...
    sam deploy --guided
)

cd ..
echo [SUCCESS] Deployment completed!

:skip_sam

REM Create environment file
echo [INFO] Creating local development environment file...
(
echo # AI Nutritionist Assistant - Local Development Environment
echo # Generated by deploy.bat on %date% %time%
echo.
echo # AWS Configuration
echo AWS_DEFAULT_REGION=%AWS_REGION%
echo AWS_ACCOUNT_ID=%AWS_ACCOUNT_ID%
echo.
echo # Development Settings
echo ENVIRONMENT=dev
echo LOG_LEVEL=DEBUG
echo PYTHONPATH=./src
echo.
echo # Twilio Configuration ^(replace with your values^)
echo # TWILIO_ACCOUNT_SID=your_account_sid_here
echo # TWILIO_AUTH_TOKEN=your_auth_token_here
echo # TWILIO_PHONE_NUMBER=your_phone_number_here
echo.
echo # Stripe Configuration ^(replace with your values^)
echo # STRIPE_SECRET_KEY=sk_test_your_test_key_here
echo # STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here
) > .env

echo [SUCCESS] Environment file created: .env

echo.
echo ðŸŽ‰ Deployment Successful!
echo ========================
echo.
echo ðŸ“‹ Next Steps for Portfolio Demo:
echo ==================================
echo.
echo 1. ðŸ“± Set up Twilio WhatsApp Business API
echo 2. ðŸ’³ Configure Stripe for payments (optional)
echo 3. ðŸ§ª Test the deployment with pytest
echo 4. ðŸ’¼ Use README_PORTFOLIO.md for presentations
echo.
echo ðŸš€ Your AI Nutritionist Assistant is ready for portfolio demonstrations!
echo Ready to impress at your next interview! ðŸ’ª
echo.
pause
